{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/elevenlabs.io/main/1.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "generate-speech-from-text",
      "summary": "Convert written text into lifelike speech using a selected voice. This is a core functionality of the ElevenLabs API, enabling applications like audio content creation, voice assistants, or accessibility tools.",
      "description": "Convert written text into lifelike speech using a selected voice. This is a core functionality of the ElevenLabs API, enabling applications like audio content creation, voice assistants, or accessibility tools.",
      "inputs": {
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string"
          },
          "page_size": {
            "type": "string"
          },
          "search": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "sort_direction": {
            "type": "string"
          },
          "voice_type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "fine_tuning_state": {
            "type": "string"
          },
          "include_total_count": {
            "type": "string"
          },
          "xi-api-key": {
            "type": "string"
          },
          "voice_id": {
            "type": "string"
          },
          "enable_logging": {
            "type": "string"
          },
          "optimize_streaming_latency": {
            "type": "string"
          },
          "output_format": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-voices",
          "description": "Retrieve a paginated list of all available voices, including premade, cloned, and generated voices, with options for filtering and sorting.",
          "operationId": "Get_voices_v2_v2_voices_get",
          "parameters": [
            {
              "name": "next_page_token",
              "in": "query",
              "value": "$inputs.next_page_token"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            },
            {
              "name": "search",
              "in": "query",
              "value": "$inputs.search"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "value": "$inputs.sort_direction"
            },
            {
              "name": "voice_type",
              "in": "query",
              "value": "$inputs.voice_type"
            },
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "fine_tuning_state",
              "in": "query",
              "value": "$inputs.fine_tuning_state"
            },
            {
              "name": "include_total_count",
              "in": "query",
              "value": "$inputs.include_total_count"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "voices": "$response.body#/voices",
            "next_page_token": "$response.body#/next_page_token"
          }
        },
        {
          "stepId": "text-to-speech",
          "description": "Generate audio from text using a specific voice. The audio is returned as a binary file.",
          "operationId": "Text_to_speech_v1_text_to_speech__voice_id__post",
          "parameters": [
            {
              "name": "voice_id",
              "in": "path",
              "value": "$steps.list-voices.outputs.voices.voice_id"
            },
            {
              "name": "enable_logging",
              "in": "query",
              "value": "$inputs.enable_logging"
            },
            {
              "name": "optimize_streaming_latency",
              "in": "query",
              "value": "$inputs.optimize_streaming_latency"
            },
            {
              "name": "output_format",
              "in": "query",
              "value": "$inputs.output_format"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "voice_id": "$steps.list-voices.outputs.voices[0].voice_id",
              "text": "$inputs.text"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "audio_file": "$response.body#/audio_file"
          }
        }
      ],
      "outputs": {
        "voices": "$steps.list-voices.outputs.voices",
        "next_page_token": "$steps.list-voices.outputs.next_page_token",
        "audio_file": "$steps.text-to-speech.outputs.audio_file"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "create-and-use-a-generated-voice",
      "summary": "Generate a new synthetic voice based on desired characteristics (gender, accent, age), create it in your voice lab, and then use it for text-to-speech generation.",
      "description": "Generate a new synthetic voice based on desired characteristics (gender, accent, age), create it in your voice lab, and then use it for text-to-speech generation.",
      "inputs": {
        "type": "object",
        "properties": {
          "xi-api-key": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "accent": {
            "type": "string"
          },
          "age": {
            "type": "string"
          },
          "accent_strength": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "voice_name": {
            "type": "string"
          },
          "voice_description": {
            "type": "string"
          },
          "voice_id": {
            "type": "string"
          },
          "enable_logging": {
            "type": "string"
          },
          "optimize_streaming_latency": {
            "type": "string"
          },
          "output_format": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-voice-generation-parameters",
          "description": "Retrieve the available parameters (genders, accents, ages) that can be used to generate a random voice.",
          "operationId": "Voice_Generation_Parameters_v1_voice_generation_generate_voice_parameters_get",
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "genders": "$response.body#/genders",
            "accents": "$response.body#/accents",
            "ages": "$response.body#/ages",
            "minimum_characters": "$response.body#/minimum_characters",
            "maximum_characters": "$response.body#/maximum_characters",
            "minimum_accent_strength": "$response.body#/minimum_accent_strength",
            "maximum_accent_strength": "$response.body#/maximum_accent_strength"
          }
        },
        {
          "stepId": "generate-random-voice-preview",
          "description": "Generate a random voice preview based on specified parameters and receive a temporary generated_voice_id and audio sample.",
          "operationId": "Generate_a_random_voice_v1_voice_generation_generate_voice_post",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "gender": "$inputs.gender",
              "accent": "$inputs.accent",
              "age": "$inputs.age",
              "accent_strength": "$inputs.accent_strength",
              "text": "$inputs.text"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "generated_voice_id": "$response.body#/generated_voice_id",
            "audio_preview": "$response.body#/audio_preview"
          }
        },
        {
          "stepId": "create-generated-voice",
          "description": "Create a permanent voice in your voice lab using a previously generated voice ID from a preview.",
          "operationId": "Create_a_previously_generated_voice_v1_voice_generation_create_voice_post",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "generated_voice_id": "$steps.generate-random-voice-preview.outputs.generated_voice_id",
              "voice_name": "$inputs.voice_name",
              "voice_description": "$inputs.voice_description"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "voice_id": "$response.body#/voice_id"
          }
        },
        {
          "stepId": "use-new-voice-for-tts",
          "description": "Use the newly created generated voice to convert text into speech.",
          "operationId": "Text_to_speech_v1_text_to_speech__voice_id__post",
          "parameters": [
            {
              "name": "voice_id",
              "in": "path",
              "value": "$inputs.voice_id"
            },
            {
              "name": "enable_logging",
              "in": "query",
              "value": "$inputs.enable_logging"
            },
            {
              "name": "optimize_streaming_latency",
              "in": "query",
              "value": "$inputs.optimize_streaming_latency"
            },
            {
              "name": "output_format",
              "in": "query",
              "value": "$inputs.output_format"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "text": "$inputs.text"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "audio_file": "$response.body#/audio_file"
          }
        }
      ],
      "outputs": {
        "genders": "$steps.get-voice-generation-parameters.outputs.genders",
        "accents": "$steps.get-voice-generation-parameters.outputs.accents",
        "ages": "$steps.get-voice-generation-parameters.outputs.ages",
        "minimum_characters": "$steps.get-voice-generation-parameters.outputs.minimum_characters",
        "maximum_characters": "$steps.get-voice-generation-parameters.outputs.maximum_characters",
        "minimum_accent_strength": "$steps.get-voice-generation-parameters.outputs.minimum_accent_strength",
        "maximum_accent_strength": "$steps.get-voice-generation-parameters.outputs.maximum_accent_strength",
        "generated_voice_id": "$steps.generate-random-voice-preview.outputs.generated_voice_id",
        "audio_preview": "$steps.generate-random-voice-preview.outputs.audio_preview",
        "voice_id": "$steps.create-generated-voice.outputs.voice_id",
        "audio_file": "$steps.use-new-voice-for-tts.outputs.audio_file"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "automated-videoaudio-dubbing",
      "summary": "Automatically dub an audio or video file into a specified target language, then retrieve the dubbed content and its transcript.",
      "description": "Automatically dub an audio or video file into a specified target language, then retrieve the dubbed content and its transcript.",
      "inputs": {
        "type": "object",
        "properties": {
          "xi-api-key": {
            "type": "string"
          },
          "file": {
            "type": "string"
          },
          "csv_file": {
            "type": "string"
          },
          "foreground_audio_file": {
            "type": "string"
          },
          "background_audio_file": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "source_url": {
            "type": "string"
          },
          "source_lang": {
            "type": "string"
          },
          "target_lang": {
            "type": "string"
          },
          "num_speakers": {
            "type": "string"
          },
          "watermark": {
            "type": "string"
          },
          "start_time": {
            "type": "string"
          },
          "end_time": {
            "type": "string"
          },
          "highest_resolution": {
            "type": "string"
          },
          "drop_background_audio": {
            "type": "string"
          },
          "use_profanity_filter": {
            "type": "string"
          },
          "dubbing_studio": {
            "type": "string"
          },
          "disable_voice_cloning": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "dubbing_id": {
            "type": "string"
          },
          "language_code": {
            "type": "string"
          },
          "format_type": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "dub-audio-or-video",
          "description": "Initiate the dubbing process for an audio or video file, converting it into a target language.",
          "operationId": "Dub_a_video_or_an_audio_file_v1_dubbing_post",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "multipart/form-data",
            "payload": {
              "file": "$inputs.file",
              "csv_file": "$inputs.csv_file",
              "foreground_audio_file": "$inputs.foreground_audio_file",
              "background_audio_file": "$inputs.background_audio_file",
              "name": "$inputs.name",
              "source_url": "$inputs.source_url",
              "source_lang": "$inputs.source_lang",
              "target_lang": "$inputs.target_lang",
              "num_speakers": "$inputs.num_speakers",
              "watermark": "$inputs.watermark",
              "start_time": "$inputs.start_time",
              "end_time": "$inputs.end_time",
              "highest_resolution": "$inputs.highest_resolution",
              "drop_background_audio": "$inputs.drop_background_audio",
              "use_profanity_filter": "$inputs.use_profanity_filter",
              "dubbing_studio": "$inputs.dubbing_studio",
              "disable_voice_cloning": "$inputs.disable_voice_cloning",
              "mode": "$inputs.mode"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "dubbing_id": "$response.body#/dubbing_id",
            "expected_duration_sec": "$response.body#/expected_duration_sec"
          }
        },
        {
          "stepId": "get-dubbing-metadata",
          "description": "Retrieve metadata about a dubbing project, including its current status and target languages.",
          "operationId": "Get_dubbing_v1_dubbing__dubbing_id__get",
          "parameters": [
            {
              "name": "dubbing_id",
              "in": "path",
              "value": "$inputs.dubbing_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "dubbing_id": "$response.body#/dubbing_id",
            "name": "$response.body#/name",
            "status": "$response.body#/status",
            "target_languages": "$response.body#/target_languages",
            "media_metadata": "$response.body#/media_metadata",
            "error": "$response.body#/error"
          }
        },
        {
          "stepId": "get-dubbed-file",
          "description": "Download the final dubbed audio or video file for a specific language.",
          "operationId": "Get_dubbed_file_v1_dubbing__dubbing_id__audio__language_code__get",
          "parameters": [
            {
              "name": "dubbing_id",
              "in": "path",
              "value": "$inputs.dubbing_id"
            },
            {
              "name": "language_code",
              "in": "path",
              "value": "$inputs.language_code"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "dubbed_file": "$response.body#/dubbed_file"
          }
        },
        {
          "stepId": "get-dubbed-transcript",
          "description": "Retrieve the transcript for the dubbed content in SRT or WEBVTT format.",
          "operationId": "Get_dubbed_transcript_v1_dubbing__dubbing_id__transcript__language_code__get",
          "parameters": [
            {
              "name": "dubbing_id",
              "in": "path",
              "value": "$inputs.dubbing_id"
            },
            {
              "name": "language_code",
              "in": "path",
              "value": "$inputs.language_code"
            },
            {
              "name": "format_type",
              "in": "query",
              "value": "$inputs.format_type"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "transcript_file": "$response.body#/transcript_file"
          }
        }
      ],
      "outputs": {
        "dubbing_id": "$steps.get-dubbing-metadata.outputs.dubbing_id",
        "expected_duration_sec": "$steps.dub-audio-or-video.outputs.expected_duration_sec",
        "name": "$steps.get-dubbing-metadata.outputs.name",
        "status": "$steps.get-dubbing-metadata.outputs.status",
        "target_languages": "$steps.get-dubbing-metadata.outputs.target_languages",
        "media_metadata": "$steps.get-dubbing-metadata.outputs.media_metadata",
        "error": "$steps.get-dubbing-metadata.outputs.error",
        "dubbed_file": "$steps.get-dubbed-file.outputs.dubbed_file",
        "transcript_file": "$steps.get-dubbed-transcript.outputs.transcript_file"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-generated-audio-history",
      "summary": "Access, retrieve, and manage your previously generated audio items, including downloading individual or multiple items and deleting them.",
      "description": "Access, retrieve, and manage your previously generated audio items, including downloading individual or multiple items and deleting them.",
      "inputs": {
        "type": "object",
        "properties": {
          "page_size": {
            "type": "string"
          },
          "start_after_history_item_id": {
            "type": "string"
          },
          "voice_id": {
            "type": "string"
          },
          "search": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "xi-api-key": {
            "type": "string"
          },
          "history_item_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-generated-items",
          "description": "Retrieve a list of your generated audio items, with options for pagination and filtering.",
          "operationId": "List_generated_items_v1_history_get",
          "parameters": [
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            },
            {
              "name": "start_after_history_item_id",
              "in": "query",
              "value": "$inputs.start_after_history_item_id"
            },
            {
              "name": "voice_id",
              "in": "query",
              "value": "$inputs.voice_id"
            },
            {
              "name": "search",
              "in": "query",
              "value": "$inputs.search"
            },
            {
              "name": "source",
              "in": "query",
              "value": "$inputs.source"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "history_items": "$response.body#/history_items",
            "last_history_item_id": "$response.body#/last_history_item_id"
          }
        },
        {
          "stepId": "get-history-item-audio",
          "description": "Download the audio file for a specific generated history item.",
          "operationId": "Get_audio_from_history_item_v1_history__history_item_id__audio_get",
          "parameters": [
            {
              "name": "history_item_id",
              "in": "path",
              "value": "$steps.list-generated-items.outputs.history_items.history_item_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "audio_file": "$response.body#/audio_file"
          }
        },
        {
          "stepId": "download-multiple-history-items",
          "description": "Download one or more history items, either as a single audio file or a ZIP archive if multiple are requested.",
          "operationId": "Download_history_items_v1_history_download_post",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "history_item_ids": "$steps.list-generated-items.outputs.history_items[*].history_item_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "downloaded_audio": "$response.body#/downloaded_audio"
          }
        },
        {
          "stepId": "delete-history-item",
          "description": "Delete a specific generated audio item from your history.",
          "operationId": "Delete_history_item_v1_history__history_item_id__delete",
          "parameters": [
            {
              "name": "history_item_id",
              "in": "path",
              "value": "$steps.list-generated-items.outputs.history_items.history_item_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body#/status"
          }
        }
      ],
      "outputs": {
        "history_items": "$steps.list-generated-items.outputs.history_items",
        "last_history_item_id": "$steps.list-generated-items.outputs.last_history_item_id",
        "audio_file": "$steps.get-history-item-audio.outputs.audio_file",
        "downloaded_audio": "$steps.download-multiple-history-items.outputs.downloaded_audio",
        "status": "$steps.delete-history-item.outputs.status"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "create-and-convert-studio-project",
      "summary": "Create a new long-form audio project (e.g., an audiobook), add content to it, convert it into audio, and then retrieve the generated audio.",
      "description": "Create a new long-form audio project (e.g., an audiobook), add content to it, convert it into audio, and then retrieve the generated audio.",
      "inputs": {
        "type": "object",
        "properties": {
          "xi-api-key": {
            "type": "string"
          },
          "next_page_token": {
            "type": "string"
          },
          "page_size": {
            "type": "string"
          },
          "search": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "sort_direction": {
            "type": "string"
          },
          "voice_type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "fine_tuning_state": {
            "type": "string"
          },
          "include_total_count": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "default_title_voice_id": {
            "type": "string"
          },
          "default_paragraph_voice_id": {
            "type": "string"
          },
          "default_model_id": {
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "from_url": {
            "type": "string"
          },
          "from_document": {
            "type": "string"
          },
          "auto_convert": {
            "type": "string"
          },
          "project_snapshot_id": {
            "type": "string"
          },
          "convert_to_mpeg": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-models",
          "description": "Get a list of available models to choose from for project conversion.",
          "operationId": "Get_Models_v1_models_get",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "models": "$response.body#/0/models"
          }
        },
        {
          "stepId": "list-voices",
          "description": "Retrieve a list of available voices to assign to project titles and paragraphs.",
          "operationId": "Get_voices_v2_v2_voices_get",
          "parameters": [
            {
              "name": "next_page_token",
              "in": "query",
              "value": "$inputs.next_page_token"
            },
            {
              "name": "page_size",
              "in": "query",
              "value": "$inputs.page_size"
            },
            {
              "name": "search",
              "in": "query",
              "value": "$inputs.search"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "value": "$inputs.sort_direction"
            },
            {
              "name": "voice_type",
              "in": "query",
              "value": "$inputs.voice_type"
            },
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "fine_tuning_state",
              "in": "query",
              "value": "$inputs.fine_tuning_state"
            },
            {
              "name": "include_total_count",
              "in": "query",
              "value": "$inputs.include_total_count"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "voices": "$response.body#/voices"
          }
        },
        {
          "stepId": "create-studio-project",
          "description": "Create a new Studio project, optionally initializing it from a URL or document.",
          "operationId": "Create_Studio_project_v1_studio_projects_post",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "multipart/form-data",
            "payload": {
              "name": "$inputs.name",
              "default_title_voice_id": "$inputs.default_title_voice_id",
              "default_paragraph_voice_id": "$inputs.default_paragraph_voice_id",
              "default_model_id": "$inputs.default_model_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "project_id": "$response.body#/project_id"
          }
        },
        {
          "stepId": "update-studio-project-content",
          "description": "Update the content of an existing Studio project, for example, by uploading a new document or providing a URL.",
          "operationId": "Update_Studio_project_content_v1_studio_projects__project_id__content_post",
          "parameters": [
            {
              "name": "project_id",
              "in": "path",
              "value": "$inputs.project_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "multipart/form-data",
            "payload": {
              "from_url": "$inputs.from_url",
              "from_document": "$inputs.from_document",
              "auto_convert": "$inputs.auto_convert"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "project_id": "$response.body#/project_id"
          }
        },
        {
          "stepId": "convert-studio-project",
          "description": "Start the conversion process for a Studio project and all its chapters into audio.",
          "operationId": "Convert_Studio_project_v1_studio_projects__project_id__convert_post",
          "parameters": [
            {
              "name": "project_id",
              "in": "path",
              "value": "$inputs.project_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body#/status"
          }
        },
        {
          "stepId": "list-studio-project-snapshots",
          "description": "Retrieve a list of snapshots for a Studio project, which represent converted versions of the project's audio.",
          "operationId": "List_Studio_project_snapshots_v1_studio_projects__project_id__snapshots_get",
          "parameters": [
            {
              "name": "project_id",
              "in": "path",
              "value": "$inputs.project_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "snapshots": "$response.body#/snapshots"
          }
        },
        {
          "stepId": "stream-studio-project-audio",
          "description": "Stream the audio from a specific Studio project snapshot.",
          "operationId": "Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post",
          "parameters": [
            {
              "name": "project_id",
              "in": "path",
              "value": "$inputs.project_id"
            },
            {
              "name": "project_snapshot_id",
              "in": "path",
              "value": "$inputs.project_snapshot_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "convert_to_mpeg": "$inputs.convert_to_mpeg"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "audio_stream": "$response.body#/audio_stream"
          }
        }
      ],
      "outputs": {
        "models": "$steps.list-models.outputs.models",
        "voices": "$steps.list-voices.outputs.voices",
        "project_id": "$steps.update-studio-project-content.outputs.project_id",
        "status": "$steps.convert-studio-project.outputs.status",
        "snapshots": "$steps.list-studio-project-snapshots.outputs.snapshots",
        "audio_stream": "$steps.stream-studio-project-audio.outputs.audio_stream"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "conversational-ai-agent-creation-and-knowledge-base-setup",
      "summary": "Create a new conversational AI agent, populate its knowledge base with documents (e.g., FAQs, articles), and prepare it for RAG (Retrieval Augmented Generation) to enable intelligent conversations.",
      "description": "Create a new conversational AI agent, populate its knowledge base with documents (e.g., FAQs, articles), and prepare it for RAG (Retrieval Augmented Generation) to enable intelligent conversations.",
      "inputs": {
        "type": "object",
        "properties": {
          "use_tool_ids": {
            "type": "string"
          },
          "xi-api-key": {
            "type": "string"
          },
          "conversation_config": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "file": {
            "type": "string"
          },
          "documentation_id": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "agent_id": {
            "type": "string"
          },
          "conversation_signature": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-agent",
          "description": "Create a new conversational AI agent with a specified configuration.",
          "operationId": "Create_Agent_v1_convai_agents_create_post",
          "parameters": [
            {
              "name": "use_tool_ids",
              "in": "query",
              "value": "$inputs.use_tool_ids"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "conversation_config": "$inputs.conversation_config"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "agent_id": "$response.body#/agent_id"
          }
        },
        {
          "stepId": "add-to-knowledge-base",
          "description": "Upload a file or reference a webpage to be used as part of the agent's knowledge base.",
          "operationId": "Add_to_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "multipart/form-data",
            "payload": {
              "name": "$inputs.name",
              "url": "$inputs.url",
              "file": "$inputs.file"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "prompt_injectable": "$response.body#/prompt_injectable"
          }
        },
        {
          "stepId": "compute-rag-index",
          "description": "Trigger the RAG indexing process for a document in the knowledge base, or get its current status.",
          "operationId": "Compute_RAG_index__v1_convai_knowledge_base__documentation_id__rag_index_post",
          "parameters": [
            {
              "name": "documentation_id",
              "in": "path",
              "value": "$inputs.documentation_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "model": "$inputs.model"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body#/status",
            "progress_percentage": "$response.body#/progress_percentage"
          }
        },
        {
          "stepId": "get-agent-widget-config",
          "description": "Retrieve the configuration for embedding the agent's conversational widget on a website.",
          "operationId": "Get_Agent_widget_config_v1_convai_agents__agent_id__widget_get",
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "value": "$inputs.agent_id"
            },
            {
              "name": "conversation_signature",
              "in": "query",
              "value": "$inputs.conversation_signature"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "agent_id": "$response.body#/agent_id",
            "widget_config": "$response.body#/widget_config"
          }
        },
        {
          "stepId": "get-shareable-agent-link",
          "description": "Get a shareable link that can be used to allow others to interact with the agent.",
          "operationId": "Get_shareable_agent_link_v1_convai_agents__agent_id__link_get",
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "value": "$inputs.agent_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "agent_id": "$response.body#/agent_id",
            "token": "$response.body#/token"
          }
        }
      ],
      "outputs": {
        "agent_id": "$steps.get-shareable-agent-link.outputs.agent_id",
        "id": "$steps.add-to-knowledge-base.outputs.id",
        "prompt_injectable": "$steps.add-to-knowledge-base.outputs.prompt_injectable",
        "status": "$steps.compute-rag-index.outputs.status",
        "progress_percentage": "$steps.compute-rag-index.outputs.progress_percentage",
        "widget_config": "$steps.get-agent-widget-config.outputs.widget_config",
        "token": "$steps.get-shareable-agent-link.outputs.token"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-workspace-user-access",
      "summary": "Administer user access within a workspace by inviting new members, managing their group memberships, and updating their roles.",
      "description": "Administer user access within a workspace by inviting new members, managing their group memberships, and updating their roles.",
      "inputs": {
        "type": "object",
        "properties": {
          "xi-api-key": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "invite-user",
          "description": "Send an email invitation to a user to join your workspace.",
          "operationId": "Invite_user_v1_workspace_invites_add_post",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "email": "$inputs.email"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body#/status"
          }
        },
        {
          "stepId": "search-user-groups",
          "description": "Search for existing user groups within the workspace by name.",
          "operationId": "Search_user_groups_v1_workspace_groups_search_get",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "groups": "$response.body#/0/groups"
          }
        },
        {
          "stepId": "add-member-to-user-group",
          "description": "Add an existing workspace member to a specified user group.",
          "operationId": "Add_member_to_user_group_v1_workspace_groups__group_id__members_post",
          "parameters": [
            {
              "name": "group_id",
              "in": "path",
              "value": "$inputs.group_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "email": "$inputs.email"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body#/status"
          }
        },
        {
          "stepId": "update-member",
          "description": "Update attributes of a workspace member, such as their lock status or workspace role.",
          "operationId": "Update_member_v1_workspace_members_post",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "email": "$inputs.email"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body#/status"
          }
        }
      ],
      "outputs": {
        "status": "$steps.update-member.outputs.status",
        "groups": "$steps.search-user-groups.outputs.groups"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "pronunciation-dictionary-management",
      "summary": "Create and manage custom pronunciation dictionaries to ensure specific words or phrases are pronounced correctly in generated speech.",
      "description": "Create and manage custom pronunciation dictionaries to ensure specific words or phrases are pronounced correctly in generated speech.",
      "inputs": {
        "type": "object",
        "properties": {
          "xi-api-key": {
            "type": "string"
          },
          "rules": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "pronunciation_dictionary_id": {
            "type": "string"
          },
          "dictionary_id": {
            "type": "string"
          },
          "version_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "add-pronunciation-dictionary-from-rules",
          "description": "Create a new pronunciation dictionary by providing a list of rules (e.g., alias or phoneme rules).",
          "operationId": "Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "rules": "$inputs.rules",
              "name": "$inputs.name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "name": "$response.body#/name",
            "created_by": "$response.body#/created_by",
            "creation_time_unix": "$response.body#/creation_time_unix",
            "version_id": "$response.body#/version_id",
            "version_rules_num": "$response.body#/version_rules_num"
          }
        },
        {
          "stepId": "add-rules-to-pronunciation-dictionary",
          "description": "Add new rules to an existing pronunciation dictionary.",
          "operationId": "Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post",
          "parameters": [
            {
              "name": "pronunciation_dictionary_id",
              "in": "path",
              "value": "$inputs.pronunciation_dictionary_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "rules": "$inputs.rules"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "version_id": "$response.body#/version_id",
            "version_rules_num": "$response.body#/version_rules_num"
          }
        },
        {
          "stepId": "get-pronunciation-dictionary-metadata",
          "description": "Retrieve metadata for a specific pronunciation dictionary.",
          "operationId": "Get_metadata_for_a_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id___get",
          "parameters": [
            {
              "name": "pronunciation_dictionary_id",
              "in": "path",
              "value": "$inputs.pronunciation_dictionary_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "latest_version_id": "$response.body#/latest_version_id",
            "latest_version_rules_num": "$response.body#/latest_version_rules_num",
            "name": "$response.body#/name",
            "created_by": "$response.body#/created_by",
            "creation_time_unix": "$response.body#/creation_time_unix",
            "archived_time_unix": "$response.body#/archived_time_unix",
            "description": "$response.body#/description"
          }
        },
        {
          "stepId": "download-pronunciation-dictionary-rules",
          "description": "Download a PLS file containing the rules for a specific version of a pronunciation dictionary.",
          "operationId": "Get_a_PLS_file_with_a_pronunciation_dictionary_version_rules_v1_pronunciation_dictionaries__dictionary_id___version_id__download_get",
          "parameters": [
            {
              "name": "dictionary_id",
              "in": "path",
              "value": "$inputs.dictionary_id"
            },
            {
              "name": "version_id",
              "in": "path",
              "value": "$inputs.version_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "pls_file": "$response.body#/pls_file"
          }
        }
      ],
      "outputs": {
        "id": "$steps.get-pronunciation-dictionary-metadata.outputs.id",
        "name": "$steps.get-pronunciation-dictionary-metadata.outputs.name",
        "created_by": "$steps.get-pronunciation-dictionary-metadata.outputs.created_by",
        "creation_time_unix": "$steps.get-pronunciation-dictionary-metadata.outputs.creation_time_unix",
        "version_id": "$steps.add-rules-to-pronunciation-dictionary.outputs.version_id",
        "version_rules_num": "$steps.add-rules-to-pronunciation-dictionary.outputs.version_rules_num",
        "latest_version_id": "$steps.get-pronunciation-dictionary-metadata.outputs.latest_version_id",
        "latest_version_rules_num": "$steps.get-pronunciation-dictionary-metadata.outputs.latest_version_rules_num",
        "archived_time_unix": "$steps.get-pronunciation-dictionary-metadata.outputs.archived_time_unix",
        "description": "$steps.get-pronunciation-dictionary-metadata.outputs.description",
        "pls_file": "$steps.download-pronunciation-dictionary-rules.outputs.pls_file"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}
