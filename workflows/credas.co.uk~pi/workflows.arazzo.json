{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/credas.co.uk/pi/v1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "instant-individual-verification",
      "summary": "This workflow provides a streamlined method for creating a new individual registration and simultaneously uploading their ID document and an optional selfie image. It's designed for quick integration paths where initial document and image capture is handled externally, allowing for immediate processing and subsequent retrieval of the verification summary and report.",
      "description": "This workflow provides a streamlined method for creating a new individual registration and simultaneously uploading their ID document and an optional selfie image. It's designed for quick integration paths where initial document and image capture is handled externally, allowing for immediate processing and subsequent retrieval of the verification summary and report.",
      "inputs": {
        "type": "object",
        "properties": {
          "apikey": {
            "type": "string"
          },
          "document": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "forename": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-registration-types",
          "description": "Retrieves a list of available registration types, which is necessary to create a new registration.",
          "operationId": "GetAll",
          "parameters": [
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "regTypes": "$response.body#/0/regTypes"
          }
        },
        {
          "stepId": "add-instant-registration",
          "description": "Creates a new registration record and instantly adds an ID document and an optional selfie image in a single API call.",
          "operationId": "AddInstantRegistration",
          "parameters": [
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "requestBody": {
            "contentType": "application/*+json",
            "payload": {
              "regTypeId": "$steps.get-registration-types.outputs.regTypes[0].id",
              "document": "$inputs.document",
              "documentType": "$inputs.documentType",
              "forename": "$inputs.forename",
              "surname": "$inputs.surname"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "regCode": "$response.body#/regCode",
            "documentType": "$response.body#/documentType",
            "documentStatus": "$response.body#/documentStatus",
            "facialMatch": "$response.body#/facialMatch"
          }
        },
        {
          "stepId": "get-registration-summary",
          "description": "Retrieves the summary of the newly created registration to check the initial verification status and details.",
          "operationId": "GetRegistrationSummary",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.add-instant-registration.outputs.id"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "status": "$response.body#/status",
            "dateCompleted": "$response.body#/dateCompleted",
            "dataCheckResult": "$response.body#/dataCheckResult",
            "idDocuments": "$response.body#/idDocuments",
            "bankAccountChecks": "$response.body#/bankAccountChecks",
            "creditStatusCheck": "$response.body#/creditStatusCheck",
            "proofOfOwnershipCheck": "$response.body#/proofOfOwnershipCheck"
          }
        },
        {
          "stepId": "get-registration-pdf-report",
          "description": "Generates and retrieves a complete PDF report for the instant registration, summarizing all verification outcomes.",
          "operationId": "GetRegistrationPdfExport",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.add-instant-registration.outputs.id"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "pdf_report_byte_stream": "$response.body#/pdf_report_byte_stream"
          }
        }
      ],
      "outputs": {
        "regTypes": "$steps.get-registration-types.outputs.regTypes",
        "id": "$steps.get-registration-summary.outputs.id",
        "regCode": "$steps.add-instant-registration.outputs.regCode",
        "documentType": "$steps.add-instant-registration.outputs.documentType",
        "documentStatus": "$steps.add-instant-registration.outputs.documentStatus",
        "facialMatch": "$steps.add-instant-registration.outputs.facialMatch",
        "status": "$steps.get-registration-summary.outputs.status",
        "dateCompleted": "$steps.get-registration-summary.outputs.dateCompleted",
        "dataCheckResult": "$steps.get-registration-summary.outputs.dataCheckResult",
        "idDocuments": "$steps.get-registration-summary.outputs.idDocuments",
        "bankAccountChecks": "$steps.get-registration-summary.outputs.bankAccountChecks",
        "creditStatusCheck": "$steps.get-registration-summary.outputs.creditStatusCheck",
        "proofOfOwnershipCheck": "$steps.get-registration-summary.outputs.proofOfOwnershipCheck",
        "pdf_report_byte_stream": "$steps.get-registration-pdf-report.outputs.pdf_report_byte_stream"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "comprehensive-individual-verification-agent-led",
      "summary": "This workflow enables an agent or system to initiate a new identity verification process for an individual, upload their identification documents and selfie images, perform various data checks (AML, bank account, credit status, property ownership), and finally retrieve a comprehensive summary and a detailed PDF report of all verification results. This is ideal for a guided, step-by-step verification process.",
      "description": "This workflow enables an agent or system to initiate a new identity verification process for an individual, upload their identification documents and selfie images, perform various data checks (AML, bank account, credit status, property ownership), and finally retrieve a comprehensive summary and a detailed PDF report of all verification results. This is ideal for a guided, step-by-step verification process.",
      "inputs": {
        "type": "object",
        "properties": {
          "apikey": {
            "type": "string"
          },
          "forename": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "sendSms": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "imageData": {
            "type": "string"
          },
          "checkType": {
            "type": "string"
          },
          "person": {
            "type": "string"
          },
          "currentAddress": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "accountDetails": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-registration-types",
          "description": "Retrieves a list of available registration types, which is necessary to create a new registration.",
          "operationId": "GetAll",
          "parameters": [
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "regTypes": "$response.body#/0/regTypes"
          }
        },
        {
          "stepId": "create-registration",
          "description": "Creates a new registration record for an individual, initiating the verification process. This step provides the unique registration ID and code.",
          "operationId": "AddRegistration",
          "parameters": [
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "requestBody": {
            "contentType": "application/*+json",
            "payload": {
              "regTypeId": "$steps.get-registration-types.outputs.regTypes[0].id",
              "forename": "$inputs.forename",
              "surname": "$inputs.surname",
              "sendSms": "$inputs.sendSms"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "regCode": "$response.body#/regCode",
            "webJourneyUrl": "$response.body#/webJourneyUrl"
          }
        },
        {
          "stepId": "add-id-document-image",
          "description": "Uploads an image of an ID document (e.g., passport, driving license) for the specified registration, triggering document analysis.",
          "operationId": "AddIdDocumentImage",
          "parameters": [
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "requestBody": {
            "contentType": "application/*+json",
            "payload": {
              "registrationId": "$steps.create-registration.outputs.id",
              "documentType": "$inputs.documentType",
              "imageData": "$inputs.imageData"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "regCode": "$response.body#/regCode",
            "documentType": "$response.body#/documentType",
            "documentStatus": "$response.body#/documentStatus",
            "facialMatch": "$response.body#/facialMatch"
          }
        },
        {
          "stepId": "add-selfie-image",
          "description": "Uploads a selfie image for the registration, which can be used for facial matching against the ID document.",
          "operationId": "AddSelfieImage",
          "parameters": [
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "requestBody": {
            "contentType": "application/*+json",
            "payload": {
              "registrationId": "$steps.create-registration.outputs.id",
              "imageData": "$inputs.imageData"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "livenessConfirmed": "$response.body#/livenessConfirmed"
          }
        },
        {
          "stepId": "perform-data-check",
          "description": "Initiates a data check (e.g., Standard AML, Enhanced AML, International PEP & Sanctions) against the registered individual's details.",
          "operationId": "AddDataCheck",
          "parameters": [
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "requestBody": {
            "contentType": "application/*+json",
            "payload": {
              "regEntryId": "$steps.create-registration.outputs.id",
              "checkType": "$inputs.checkType",
              "person": "$inputs.person",
              "currentAddress": "$inputs.currentAddress"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "regCode": "$response.body#/regCode"
          }
        },
        {
          "stepId": "verify-bank-account",
          "description": "Verifies the provided bank account details against the registered individual's information.",
          "operationId": "Verify",
          "parameters": [
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "requestBody": {
            "contentType": "application/*+json",
            "payload": {
              "regEntryId": "$steps.create-registration.outputs.id",
              "address": "$inputs.address",
              "person": "$inputs.person",
              "accountDetails": "$inputs.accountDetails"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "checkId": "$response.body#/checkId",
            "checkStatus": "$response.body#/checkStatus",
            "accountValid": "$response.body#/accountValid",
            "nameValidation": "$response.body#/nameValidation",
            "addressValidation": "$response.body#/addressValidation",
            "accountNumberValidation": "$response.body#/accountNumberValidation",
            "sortcodeValidation": "$response.body#/sortcodeValidation"
          }
        },
        {
          "stepId": "check-credit-status",
          "description": "Performs a credit status check, including identifying bankruptcy, insolvency, CCJs, or company directorships for the individual.",
          "operationId": "CheckCreditStatus",
          "parameters": [
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "requestBody": {
            "contentType": "application/*+json",
            "payload": {
              "regEntryId": "$steps.create-registration.outputs.id",
              "person": "$inputs.person",
              "address": "$inputs.address"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body#/status",
            "checkDate": "$response.body#/checkDate",
            "ccj": "$response.body#/ccj",
            "companyDirector": "$response.body#/companyDirector",
            "insolvency": "$response.body#/insolvency"
          }
        },
        {
          "stepId": "add-property-register-check",
          "description": "Initiates a property registry check to verify property ownership details for the individual.",
          "operationId": "AddPropertyRegisterCheck",
          "parameters": [
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "requestBody": {
            "contentType": "application/*+json",
            "payload": {
              "regEntryId": "$steps.create-registration.outputs.id",
              "person": "$inputs.person",
              "address": "$inputs.address"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "checkStatus": "$response.body#/checkStatus",
            "matchResult": "$response.body#/matchResult",
            "propertyOwnership": "$response.body#/propertyOwnership",
            "titleNumber": "$response.body#/titleNumber"
          }
        },
        {
          "stepId": "get-registration-summary",
          "description": "Retrieves a comprehensive summary of the registration, including the status of all performed checks and associated data.",
          "operationId": "GetRegistrationSummary",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-registration.outputs.id"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "status": "$response.body#/status",
            "dateCompleted": "$response.body#/dateCompleted",
            "dataCheckResult": "$response.body#/dataCheckResult",
            "idDocuments": "$response.body#/idDocuments",
            "bankAccountChecks": "$response.body#/bankAccountChecks",
            "creditStatusCheck": "$response.body#/creditStatusCheck",
            "proofOfOwnershipCheck": "$response.body#/proofOfOwnershipCheck"
          }
        },
        {
          "stepId": "get-registration-pdf-report",
          "description": "Generates and retrieves a complete PDF export of the registration details and all verification results.",
          "operationId": "GetRegistrationPdfExport",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.create-registration.outputs.id"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "pdf_report_byte_stream": "$response.body#/pdf_report_byte_stream"
          }
        }
      ],
      "outputs": {
        "regTypes": "$steps.get-registration-types.outputs.regTypes",
        "id": "$steps.get-registration-summary.outputs.id",
        "regCode": "$steps.perform-data-check.outputs.regCode",
        "webJourneyUrl": "$steps.create-registration.outputs.webJourneyUrl",
        "documentType": "$steps.add-id-document-image.outputs.documentType",
        "documentStatus": "$steps.add-id-document-image.outputs.documentStatus",
        "facialMatch": "$steps.add-id-document-image.outputs.facialMatch",
        "livenessConfirmed": "$steps.add-selfie-image.outputs.livenessConfirmed",
        "checkId": "$steps.verify-bank-account.outputs.checkId",
        "checkStatus": "$steps.add-property-register-check.outputs.checkStatus",
        "accountValid": "$steps.verify-bank-account.outputs.accountValid",
        "nameValidation": "$steps.verify-bank-account.outputs.nameValidation",
        "addressValidation": "$steps.verify-bank-account.outputs.addressValidation",
        "accountNumberValidation": "$steps.verify-bank-account.outputs.accountNumberValidation",
        "sortcodeValidation": "$steps.verify-bank-account.outputs.sortcodeValidation",
        "status": "$steps.get-registration-summary.outputs.status",
        "checkDate": "$steps.check-credit-status.outputs.checkDate",
        "ccj": "$steps.check-credit-status.outputs.ccj",
        "companyDirector": "$steps.check-credit-status.outputs.companyDirector",
        "insolvency": "$steps.check-credit-status.outputs.insolvency",
        "matchResult": "$steps.add-property-register-check.outputs.matchResult",
        "propertyOwnership": "$steps.add-property-register-check.outputs.propertyOwnership",
        "titleNumber": "$steps.add-property-register-check.outputs.titleNumber",
        "dateCompleted": "$steps.get-registration-summary.outputs.dateCompleted",
        "dataCheckResult": "$steps.get-registration-summary.outputs.dataCheckResult",
        "idDocuments": "$steps.get-registration-summary.outputs.idDocuments",
        "bankAccountChecks": "$steps.get-registration-summary.outputs.bankAccountChecks",
        "creditStatusCheck": "$steps.get-registration-summary.outputs.creditStatusCheck",
        "proofOfOwnershipCheck": "$steps.get-registration-summary.outputs.proofOfOwnershipCheck",
        "pdf_report_byte_stream": "$steps.get-registration-pdf-report.outputs.pdf_report_byte_stream"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-and-report-on-existing-registration",
      "summary": "This workflow enables an administrator or authorized user to locate an existing registration using search criteria, update the individual's contact details, and then generate a customized PDF report containing specific sections of the verification data.",
      "description": "This workflow enables an administrator or authorized user to locate an existing registration using search criteria, update the individual's contact details, and then generate a customized PDF report containing specific sections of the verification data.",
      "inputs": {
        "type": "object",
        "properties": {
          "pageNum": {
            "type": "string"
          },
          "pageSize": {
            "type": "string"
          },
          "forename": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob": {
            "type": "string"
          },
          "apikey": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "Comments": {
            "type": "string"
          },
          "ContactDetails": {
            "type": "string"
          },
          "StandardChecks": {
            "type": "string"
          },
          "PepSanctionChecks": {
            "type": "string"
          },
          "ProofOfOwnership": {
            "type": "string"
          },
          "BankAccountCheck": {
            "type": "string"
          },
          "CreditStatusCheck": {
            "type": "string"
          },
          "Liveness": {
            "type": "string"
          },
          "ExcludeSelfie": {
            "type": "string"
          },
          "ExcludeIDDocuments": {
            "type": "string"
          },
          "DIATFSection": {
            "type": "string"
          },
          "SafeHarbourSection": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-registrations",
          "description": "Searches for existing registrations based on criteria such as forename, surname, email, or date of birth, returning a paged list of summaries.",
          "operationId": "GetRegistrationSearch",
          "parameters": [
            {
              "name": "pageNum",
              "in": "query",
              "value": "$inputs.pageNum"
            },
            {
              "name": "pageSize",
              "in": "query",
              "value": "$inputs.pageSize"
            },
            {
              "name": "forename",
              "in": "query",
              "value": "$inputs.forename"
            },
            {
              "name": "surname",
              "in": "query",
              "value": "$inputs.surname"
            },
            {
              "name": "email",
              "in": "query",
              "value": "$inputs.email"
            },
            {
              "name": "dob",
              "in": "query",
              "value": "$inputs.dob"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "registrationSummaries": "$response.body#/registrationSummaries",
            "totalCount": "$response.body#/totalCount"
          }
        },
        {
          "stepId": "update-contact-details",
          "description": "Updates the contact information (e.g., email, phone number) for a specific registration.",
          "operationId": "UpdateContactDetails",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.search-registrations.outputs.registrationSummaries.id"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "requestBody": {
            "contentType": "application/*+json",
            "payload": {
              "id": "$steps.search-registrations.outputs.registrationSummaries[0].id",
              "forename": "$inputs.forename",
              "surname": "$inputs.surname"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "details_data": "$response.body"
          }
        },
        {
          "stepId": "get-registration-summary",
          "description": "Retrieves the updated summary of the registration to confirm the contact details have been applied and review overall status.",
          "operationId": "GetRegistrationSummary",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.search-registrations.outputs.registrationSummaries.id"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "status": "$response.body#/status",
            "email": "$response.body#/email",
            "phoneNumber": "$response.body#/phoneNumber",
            "personalDetails": "$response.body#/personalDetails"
          }
        },
        {
          "stepId": "get-registration-pdf-export-sections",
          "description": "Generates a PDF report for the registration, allowing selection of specific sections to include (e.g., contact details, standard checks, PEP/Sanctions).",
          "operationId": "GetRegistrationPdfExport",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.search-registrations.outputs.registrationSummaries.id"
            },
            {
              "name": "Comments",
              "in": "query",
              "value": "$inputs.Comments"
            },
            {
              "name": "ContactDetails",
              "in": "query",
              "value": "$inputs.ContactDetails"
            },
            {
              "name": "StandardChecks",
              "in": "query",
              "value": "$inputs.StandardChecks"
            },
            {
              "name": "PepSanctionChecks",
              "in": "query",
              "value": "$inputs.PepSanctionChecks"
            },
            {
              "name": "ProofOfOwnership",
              "in": "query",
              "value": "$inputs.ProofOfOwnership"
            },
            {
              "name": "BankAccountCheck",
              "in": "query",
              "value": "$inputs.BankAccountCheck"
            },
            {
              "name": "CreditStatusCheck",
              "in": "query",
              "value": "$inputs.CreditStatusCheck"
            },
            {
              "name": "Liveness",
              "in": "query",
              "value": "$inputs.Liveness"
            },
            {
              "name": "ExcludeSelfie",
              "in": "query",
              "value": "$inputs.ExcludeSelfie"
            },
            {
              "name": "ExcludeIDDocuments",
              "in": "query",
              "value": "$inputs.ExcludeIDDocuments"
            },
            {
              "name": "DIATFSection",
              "in": "query",
              "value": "$inputs.DIATFSection"
            },
            {
              "name": "SafeHarbourSection",
              "in": "query",
              "value": "$inputs.SafeHarbourSection"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "pdf_report_byte_stream": "$response.body#/pdf_report_byte_stream"
          }
        }
      ],
      "outputs": {
        "registrationSummaries": "$steps.search-registrations.outputs.registrationSummaries",
        "totalCount": "$steps.search-registrations.outputs.totalCount",
        "details_data": "$steps.update-contact-details.outputs.details_data",
        "id": "$steps.get-registration-summary.outputs.id",
        "status": "$steps.get-registration-summary.outputs.status",
        "email": "$steps.get-registration-summary.outputs.email",
        "phoneNumber": "$steps.get-registration-summary.outputs.phoneNumber",
        "personalDetails": "$steps.get-registration-summary.outputs.personalDetails",
        "pdf_report_byte_stream": "$steps.get-registration-pdf-export-sections.outputs.pdf_report_byte_stream"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manual-override-and-report-generation",
      "summary": "This workflow allows an authorized user to manually adjust the status of a specific verification check for a registration (e.g., to 'Pass' or 'Refer' after a manual review) and then generate an updated PDF report reflecting this override. This is crucial for handling edge cases or manual interventions in the verification process.",
      "description": "This workflow allows an authorized user to manually adjust the status of a specific verification check for a registration (e.g., to 'Pass' or 'Refer' after a manual review) and then generate an updated PDF report reflecting this override. This is crucial for handling edge cases or manual interventions in the verification process.",
      "inputs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "apikey": {
            "type": "string"
          },
          "checkType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-registration-summary-by-id",
          "description": "Retrieves the current summary of a registration to identify which checks might require a manual override.",
          "operationId": "GetRegistrationSummary",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "status": "$response.body#/status",
            "dataCheckResult": "$response.body#/dataCheckResult",
            "idVerification": "$response.body#/idVerification",
            "bankAccountChecks": "$response.body#/bankAccountChecks",
            "creditStatusCheck": "$response.body#/creditStatusCheck",
            "proofOfOwnershipCheck": "$response.body#/proofOfOwnershipCheck"
          }
        },
        {
          "stepId": "override-check-status",
          "description": "Sets a manual override for a specific check (e.g., ID documents, credit status) on the registration, changing its verification status.",
          "operationId": "OverrideCheckStatus",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-registration-summary-by-id.outputs.id"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "requestBody": {
            "contentType": "application/*+json",
            "payload": {
              "id": "$steps.get-registration-summary-by-id.outputs.id",
              "checkType": "$inputs.checkType",
              "status": "$inputs.status",
              "comment": "$inputs.comment"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status_data": "$response.body"
          }
        },
        {
          "stepId": "get-registration-pdf-report",
          "description": "Generates and retrieves a complete PDF report for the registration, now reflecting the manually overridden check status.",
          "operationId": "GetRegistrationPdfExport",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-registration-summary-by-id.outputs.id"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "pdf_report_byte_stream": "$response.body#/pdf_report_byte_stream"
          }
        }
      ],
      "outputs": {
        "id": "$steps.get-registration-summary-by-id.outputs.id",
        "status": "$steps.get-registration-summary-by-id.outputs.status",
        "dataCheckResult": "$steps.get-registration-summary-by-id.outputs.dataCheckResult",
        "idVerification": "$steps.get-registration-summary-by-id.outputs.idVerification",
        "bankAccountChecks": "$steps.get-registration-summary-by-id.outputs.bankAccountChecks",
        "creditStatusCheck": "$steps.get-registration-summary-by-id.outputs.creditStatusCheck",
        "proofOfOwnershipCheck": "$steps.get-registration-summary-by-id.outputs.proofOfOwnershipCheck",
        "status_data": "$steps.override-check-status.outputs.status_data",
        "pdf_report_byte_stream": "$steps.get-registration-pdf-report.outputs.pdf_report_byte_stream"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "generate-secure-web-verification-link-for-existing-registration",
      "summary": "This workflow allows for the generation of a secure, temporary URL that can be provided to an individual, enabling them to complete their identity verification process via a web browser. This is useful for sending out invitations or reminders for self-service verification.",
      "description": "This workflow allows for the generation of a secure, temporary URL that can be provided to an individual, enabling them to complete their identity verification process via a web browser. This is useful for sending out invitations or reminders for self-service verification.",
      "inputs": {
        "type": "object",
        "properties": {
          "regCode": {
            "type": "string"
          },
          "apikey": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-registration-summary-by-reg-code",
          "description": "Finds an existing registration using its short unique RegCode to retrieve its full ID.",
          "operationId": "GetRegistrationSummaryByRegCode",
          "parameters": [
            {
              "name": "regCode",
              "in": "path",
              "value": "$inputs.regCode"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "regCode": "$response.body#/regCode",
            "email": "$response.body#/email",
            "phoneNumber": "$response.body#/phoneNumber"
          }
        },
        {
          "stepId": "get-web-verification-link-by-registration-id",
          "description": "Retrieves a secure, time-limited URL for the specified registration, allowing the individual to access their web verification journey.",
          "operationId": "GetWebVerificationsByRegistrationId",
          "parameters": [
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "requestBody": {
            "contentType": "application/*+json",
            "payload": {
              "registrationId": "$steps.get-registration-summary-by-reg-code.outputs.id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "results": "$response.body#/results"
          }
        }
      ],
      "outputs": {
        "id": "$steps.get-registration-summary-by-reg-code.outputs.id",
        "regCode": "$steps.get-registration-summary-by-reg-code.outputs.regCode",
        "email": "$steps.get-registration-summary-by-reg-code.outputs.email",
        "phoneNumber": "$steps.get-registration-summary-by-reg-code.outputs.phoneNumber",
        "results": "$steps.get-web-verification-link-by-registration-id.outputs.results"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-id-document-scan-report",
      "summary": "This workflow allows for retrieving detailed analysis reports for specific scanned ID documents associated with a registration. This is useful for auditing, compliance, or deeper investigation into document authenticity.",
      "description": "This workflow allows for retrieving detailed analysis reports for specific scanned ID documents associated with a registration. This is useful for auditing, compliance, or deeper investigation into document authenticity.",
      "inputs": {
        "type": "object",
        "properties": {
          "registrationId": {
            "type": "string"
          },
          "apikey": {
            "type": "string"
          },
          "scanId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-id-document-images",
          "description": "Retrieves a list of all ID document images associated with a given registration, including their unique scan IDs.",
          "operationId": "GetIdDocumentImages",
          "parameters": [
            {
              "name": "registrationId",
              "in": "path",
              "value": "$inputs.registrationId"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "idDocuments": "$response.body#/0/idDocuments"
          }
        },
        {
          "stepId": "get-scan-report-pdf",
          "description": "Returns a detailed PDF report on the analysis performed on a specific scanned document, identified by its scan ID.",
          "operationId": "GetScanReportPdf",
          "parameters": [
            {
              "name": "scanId",
              "in": "path",
              "value": "$steps.get-id-document-images.outputs.idDocuments.id"
            },
            {
              "name": "apikey",
              "in": "header",
              "value": "$inputs.apikey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "pdf_report_byte_stream": "$response.body#/pdf_report_byte_stream"
          }
        }
      ],
      "outputs": {
        "idDocuments": "$steps.get-id-document-images.outputs.idDocuments",
        "pdf_report_byte_stream": "$steps.get-scan-report-pdf.outputs.pdf_report_byte_stream"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}
